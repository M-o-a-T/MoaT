port:
  dev:
    - micro/lib/micropython/ports/unix/build-standard/micropython
    - micro/tests-mpy/mplex.py
  socket: "moat.pipe"
link:
  lossy: False
  guarded: False

apps:
  f: fs.FsCmd
  bat1: bms.std.Cmd

bat1:
  client: app.bms._test.Batt
  server: moat.micro.app.bms._test.Batt

  poll:
    t:
      # how often to poll, milliseconds
      voltage: 1000
      cellvoltage: 2000
      celltemperature: 5000
      live: 10000
    n:
      voltage: 5
  cap:
    a: 10  # actual capacity
    ah: 11  # nominal capacity
    loss: 0.02
    cur: 500000  # actual battery capacity in watt seconds

  # i|u.min|max trip the relay if they're exceeded.
  # i|u.ext.min|max values are communicated to external systems.
  power:
    client: moat.micro.part.combo.Multiply
    server: moat.micro.link.Listener
    link: ui
    t: 200
    t_send: 2000

    u:
      client: app.bms._test.Static
      server: moat.micro.link.Listener
      link: u
      value: 12.3
      min: 10
      max: 14
    i: 
      client: app.bms._test.Static
      server: moat.micro.link.Listener
      link: i
      value: 3.2
      min: 5
      max: 5

  relay:
    client: moat.micro.part.relay.Relay
    server: moat.micro.link.Listener
    link: rly
    pin: 2
    t: 10000  # time until re-engaging relay after an error
    t1: 2000  # as before but first switch
  balancer: {}
  cells:
    server: moat.micro.app.bms._test.Cells
    n: 4  # number of cells in this battery
    default:
      server: moat.micro.app.bms._test.Cell
      u: 3.1
      t: 22.2
      min: 2
      max: 4
      ext:
        min: 2.9
        max: 3.58
      lim:  # voltages where max current starts degrading
        min: 3.0
        max: 3.4

    cells:
    - seed: 1
    - seed: 2
    - seed: 3
    - seed: 4

    balance:
      min: 3.5
      d: 0.05
      n: 2
      r: 0.05

    load:
      # load resistor
      r: 3.1

      # load thermistor max temperature
      max: 60
      b: 3950
    batt:
      # external (battery) thermistor
      b: 3950
      min: 15
      max: 45
