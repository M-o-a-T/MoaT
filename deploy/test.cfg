# Basic setup for testing with a local micropython installation.
#
#
micro:
  setup:
    args:
      cross: "/src/moat/micro/lib/micropython/mpy-cross/build/mpy-cross"
      config: !P cfg.r
    std: true
    apps:
      r: _test.MpyRaw
    r: &rm
      cwd: /tmp/mpy-test
      mplex: false
      log:
        txt: "S"
    
  # main service. This could be a serial.Link instead, but this way
  # "moat micro setup --run" keeps the existing link going
  apps:
    r: serial.Raw
    s: remote.Link
    n: net.unix.Port
  r: *rm
  s:
    path: !P r
  n: &np
    port: /tmp/moat.test
      
  cfg:
    r:
      apps:
        r: stdio.StdIO
        f: fs.Cmd
      r: *rm
      f:
        root: /tmp/mpy-test

  # Service for connecting to the main code.
  connect:
    apps:
      r: net.unix.Link
    r: *np

logging:
  version: 1
  loggers:
    asyncserf:
      level: INFO
    xknx.raw_socket:
      level: INFO
    moat.micro.direct:
      level: DEBUG
    moat.micro.path:
      level: INFO
  root:
    handlers:
      - stderr
    level: INFO
  handlers:
#           "logfile": {
#               "class": "logging.FileHandler",
#               "filename": "test.log",
#               "level": "DEBUG",
#               "formatter": "std",
    stderr:
      class: logging.StreamHandler
      level: DEBUG
      formatter: std
      stream: "ext://sys.stderr"
  formatters:
    std:
      class: "moat.util.TimeOnlyFormatter"
      format: "%(asctime)s %(levelname)s:%(name)s:%(message)s"
      disable_existing_loggers: false
  
